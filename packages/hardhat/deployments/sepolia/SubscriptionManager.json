{
  "address": "0x5d49580D4ccb892b92c4c4301DDB53Fd9d91682F",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "finalBalance",
          "type": "uint256"
        }
      ],
      "name": "ChannelClosed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "name": "ChannelOpened",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "subscriptionId",
          "type": "uint256"
        }
      ],
      "name": "SubscriptionActivated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "duration",
          "type": "uint256"
        }
      ],
      "name": "SubscriptionAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Withdraw",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "subscriptionId",
          "type": "uint256"
        }
      ],
      "name": "activateSubscription",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "subscriptionIds",
          "type": "uint256[]"
        }
      ],
      "name": "activateSubscriptionsBatch",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "duration",
          "type": "uint256"
        }
      ],
      "name": "addSubscription",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "channels",
      "outputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lastSettled",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "closeChannel",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "getActiveSubscriptions",
      "outputs": [
        {
          "internalType": "bool[]",
          "name": "",
          "type": "bool[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllSubscriptions",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "duration",
              "type": "uint256"
            }
          ],
          "internalType": "struct SubscriptionManager.Subscription[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "getChannelBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "openChannel",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "subscriptionCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "subscriptions",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "duration",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x568814d3a26c63d2ace71b95ae080b1f4f785fa3ef86d218883bb11fa1c45114",
  "receipt": {
    "to": null,
    "from": "0x43baA5698f8617e730131Af52a5012e7e4674C9A",
    "contractAddress": "0x5d49580D4ccb892b92c4c4301DDB53Fd9d91682F",
    "transactionIndex": 48,
    "gasUsed": "1174093",
    "logsBloom": "0x
    "blockHash": "0xf45d0c9b36216ac2a623f348075053dfba3500e451a88e5a994502b9392f74aa",
    "transactionHash": "0x568814d3a26c63d2ace71b95ae080b1f4f785fa3ef86d218883bb11fa1c45114",
    "logs": [
      {
        "transactionIndex": 48,
        "blockNumber": 6323420,
        "transactionHash": "0x568814d3a26c63d2ace71b95ae080b1f4f785fa3ef86d218883bb11fa1c45114",
        "address": "0x5d49580D4ccb892b92c4c4301DDB53Fd9d91682F",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x00000000000000000000000043baa5698f8617e730131af52a5012e7e4674c9a"
        ],
        "data": "0x",
        "logIndex": 78,
        "blockHash": "0xf45d0c9b36216ac2a623f348075053dfba3500e451a88e5a994502b9392f74aa"
      }
    ],
    "blockNumber": 6323420,
    "cumulativeGasUsed": "12324743",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 3,
  "solcInputHash": "f4d17faa42f5c35cccde05f2c1c441d2",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"finalBalance\",\"type\":\"uint256\"}],\"name\":\"ChannelClosed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"name\":\"ChannelOpened\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"subscriptionId\",\"type\":\"uint256\"}],\"name\":\"SubscriptionActivated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"name\":\"SubscriptionAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subscriptionId\",\"type\":\"uint256\"}],\"name\":\"activateSubscription\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"subscriptionIds\",\"type\":\"uint256[]\"}],\"name\":\"activateSubscriptionsBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"name\":\"addSubscription\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"channels\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastSettled\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"closeChannel\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getActiveSubscriptions\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"\",\"type\":\"bool[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllSubscriptions\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"internalType\":\"struct SubscriptionManager.Subscription[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getChannelBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"openChannel\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"subscriptionCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"subscriptions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SubscriptionManager.sol\":\"SubscriptionManager\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\"},\"contracts/SubscriptionManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\ncontract SubscriptionManager is Ownable {\\n\\n    struct Subscription {\\n        uint256 id;\\n        string name;\\n        uint256 price;\\n        uint256 duration;\\n    }\\n\\n    struct Channel {\\n        address user;\\n        uint256 balance;\\n        uint256 lastSettled;\\n        mapping(uint256 => bool) activeSubscriptions;\\n    }\\n\\n    mapping(uint256 => Subscription) public subscriptions;\\n    mapping(address => Channel) public channels;\\n    uint256 public subscriptionCount;\\n\\n    event SubscriptionAdded(uint256 id, string name, uint256 price, uint256 duration);\\n    event ChannelOpened(address indexed user, uint256 balance);\\n    event ChannelClosed(address indexed user, uint256 finalBalance);\\n    event Withdraw(address indexed owner, uint256 amount);\\n    event SubscriptionActivated(address indexed user, uint256 subscriptionId);\\n\\n    function openChannel() external payable {\\n        require(channels[msg.sender].user == address(0), \\\"Channel already exists\\\");\\n        Channel storage channel = channels[msg.sender];\\n        channel.user = msg.sender;\\n        channel.balance = msg.value;\\n        channel.lastSettled = block.timestamp;\\n        emit ChannelOpened(msg.sender, msg.value);\\n    }\\n\\n    function closeChannel() external {\\n        Channel storage channel = channels[msg.sender];\\n        require(channel.user != address(0), \\\"Channel does not exist\\\");\\n\\n        uint256 toTransfer = channel.balance;\\n        require(address(this).balance >= toTransfer, \\\"Insufficient contract balance\\\");\\n\\n        payable(msg.sender).transfer(toTransfer);\\n        emit ChannelClosed(msg.sender, toTransfer);\\n        delete channels[msg.sender];\\n    }\\n\\n    function addSubscription(string memory name, uint256 price, uint256 duration) external onlyOwner {\\n        uint256 newId = subscriptionCount;\\n        subscriptions[newId] = Subscription(newId, name, price, duration);\\n        subscriptionCount++;\\n        emit SubscriptionAdded(newId, name, price, duration);\\n    }\\n\\n    function getAllSubscriptions() external view returns (Subscription[] memory) {\\n        Subscription[] memory allSubscriptions = new Subscription[](subscriptionCount);\\n        \\n        for (uint256 i = 0; i < subscriptionCount; i++) {\\n            allSubscriptions[i] = subscriptions[i];\\n        }\\n        \\n        return allSubscriptions;\\n    }\\n\\n    function activateSubscription(uint256 subscriptionId) external {\\n    require(channels[msg.sender].user != address(0), \\\"Channel does not exist\\\");\\n    require(subscriptionId < subscriptionCount, \\\"Invalid subscription ID\\\");\\n    Subscription storage sub = subscriptions[subscriptionId];\\n    require(channels[msg.sender].balance >= sub.price, \\\"Insufficient balance\\\");\\n    \\n    channels[msg.sender].balance -= sub.price;\\n    channels[msg.sender].activeSubscriptions[subscriptionId] = true;\\n    emit SubscriptionActivated(msg.sender, subscriptionId);\\n    }\\n\\n\\n    function activateSubscriptionsBatch(uint256[] calldata subscriptionIds) external {\\n    require(channels[msg.sender].user != address(0), \\\"Channel does not exist\\\");\\n    uint256 totalCost = 0;\\n    \\n       for (uint256 i = 0; i < subscriptionIds.length; i++) {\\n          uint256 subscriptionId = subscriptionIds[i];\\n          require(subscriptionId < subscriptionCount, \\\"Invalid subscription ID\\\");\\n          Subscription storage sub = subscriptions[subscriptionId];\\n           totalCost += sub.price;\\n       }\\n    \\n    require(channels[msg.sender].balance >= totalCost, \\\"Insufficient balance\\\");\\n    \\n    channels[msg.sender].balance -= totalCost;\\n    \\n        for (uint256 i = 0; i < subscriptionIds.length; i++) {\\n          uint256 subscriptionId = subscriptionIds[i];\\n          channels[msg.sender].activeSubscriptions[subscriptionId] = true;\\n          emit SubscriptionActivated(msg.sender, subscriptionId);\\n       }\\n    }\\n\\n    function getActiveSubscriptions(address user) external view returns (bool[] memory) {\\n        require(channels[user].user != address(0), \\\"Channel does not exist\\\");\\n\\n        bool[] memory activeSubs = new bool[](subscriptionCount);\\n        for (uint256 i = 0; i < subscriptionCount; i++) {\\n            activeSubs[i] = channels[user].activeSubscriptions[i];\\n        }\\n\\n        return activeSubs;\\n    }\\n\\n    function getChannelBalance(address user) external view returns (uint256) {\\n        require(channels[user].user != address(0), \\\"Channel does not exist\\\");\\n        return channels[user].balance;\\n    }\\n\\n    function withdraw(uint256 amount) external onlyOwner {\\n        require(amount <= address(this).balance, \\\"Insufficient contract balance\\\");\\n        payable(owner()).transfer(amount);\\n        emit Withdraw(owner(), amount);\\n    }\\n}\",\"keccak256\":\"0xd330157bee3e42ad0a51c4c66c4bc28218202b458c432108b377899aa27bf4cf\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6113d08061007e6000396000f3fe6080604052600436106100e85760003560e01c806371e537541161008a578063b28aea5611610059578063b28aea561461029b578063c70eba2a146102b0578063edb2272d146102dd578063f2fde38b146102fd57600080fd5b806371e53754146101df5780637dce34f7146101ff57806389be87a11461026b5780638da5cb5b1461027357600080fd5b80633b2af31b116100c65780633b2af31b1461016857806356eb00a1146101885780635c4dc342146101aa578063715018a6146101ca57600080fd5b8063173b6d90146100ed5780632d5bbf60146101165780632e1a7d4d14610146575b600080fd5b3480156100f957600080fd5b5061010360035481565b6040519081526020015b60405180910390f35b34801561012257600080fd5b50610136610131366004610edb565b61031d565b60405161010d9493929190610f3a565b34801561015257600080fd5b50610166610161366004610edb565b6103cd565b005b34801561017457600080fd5b50610166610183366004610f7c565b6104b5565b34801561019457600080fd5b5061019d610575565b60405161010d9190611040565b3480156101b657600080fd5b506101666101c53660046110cb565b6106fd565b3480156101d657600080fd5b50610166610903565b3480156101eb57600080fd5b506101036101fa366004611140565b610917565b34801561020b57600080fd5b5061024661021a366004611140565b60026020819052600091825260409091208054600182015491909201546001600160a01b039092169183565b604080516001600160a01b03909416845260208401929092529082015260600161010d565b61016661096f565b34801561027f57600080fd5b506000546040516001600160a01b03909116815260200161010d565b3480156102a757600080fd5b50610166610a31565b3480156102bc57600080fd5b506102d06102cb366004611140565b610b4b565b60405161010d9190611170565b3480156102e957600080fd5b506101666102f8366004610edb565b610c45565b34801561030957600080fd5b50610166610318366004611140565b610db8565b60016020819052600091825260409091208054918101805461033e906111b6565b80601f016020809104026020016040519081016040528092919081815260200182805461036a906111b6565b80156103b75780601f1061038c576101008083540402835291602001916103b7565b820191906000526020600020905b81548152906001019060200180831161039a57829003601f168201915b5050505050908060020154908060030154905084565b6103d5610e31565b4781111561042a5760405162461bcd60e51b815260206004820152601d60248201527f496e73756666696369656e7420636f6e74726163742062616c616e636500000060448201526064015b60405180910390fd5b600080546040516001600160a01b039091169183156108fc02918491818181858888f19350505050158015610463573d6000803e3d6000fd5b506000546001600160a01b03166001600160a01b03167f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364826040516104aa91815260200190565b60405180910390a250565b6104bd610e31565b60035460408051608081018252828152602080820187815282840187905260608301869052600085815260019283905293909320825181559251919291908201906105089082611239565b5060408201516002820155606090910151600391820155805490600061052d8361130f565b91905055507fec23809d8beb703b3e88af245af5efaa3ff0ca228baf23d5acd4c60cc90538e1818585856040516105679493929190610f3a565b60405180910390a150505050565b6060600060035467ffffffffffffffff81111561059457610594610f66565b6040519080825280602002602001820160405280156105f057816020015b6105dd6040518060800160405280600081526020016060815260200160008152602001600081525090565b8152602001906001900390816105b25790505b50905060005b6003548110156106f75760008181526001602081815260409283902083516080810190945280548452918201805491840191610631906111b6565b80601f016020809104026020016040519081016040528092919081815260200182805461065d906111b6565b80156106aa5780601f1061067f576101008083540402835291602001916106aa565b820191906000526020600020905b81548152906001019060200180831161068d57829003601f168201915b50505050508152602001600282015481526020016003820154815250508282815181106106d9576106d9611328565b602002602001018190525080806106ef9061130f565b9150506105f6565b50919050565b336000908152600260205260409020546001600160a01b03166107325760405162461bcd60e51b81526004016104219061133e565b6000805b828110156107da57600084848381811061075257610752611328565b90506020020135905060035481106107a65760405162461bcd60e51b8152602060048201526017602482015276125b9d985b1a59081cdd589cd8dc9a5c1d1a5bdb881251604a1b6044820152606401610421565b600081815260016020526040902060028101546107c3908561136e565b9350505080806107d29061130f565b915050610736565b50336000908152600260205260409020600101548111156108345760405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742062616c616e636560601b6044820152606401610421565b3360009081526002602052604081206001018054839290610856908490611387565b90915550600090505b828110156108fd57600084848381811061087b5761087b611328565b336000818152600260209081526040808320948202969096013580835260039094019052849020805460ff1916600117905592519093507fea0cbd7c39a8a3c9a996c6ff5ee1f9ebbff1e0cfc5b78bdcef88806d888728e191506108e29084815260200190565b60405180910390a250806108f58161130f565b91505061085f565b50505050565b61090b610e31565b6109156000610e8b565b565b6001600160a01b038181166000908152600260205260408120549091166109505760405162461bcd60e51b81526004016104219061133e565b506001600160a01b031660009081526002602052604090206001015490565b336000908152600260205260409020546001600160a01b0316156109ce5760405162461bcd60e51b81526020600482015260166024820152754368616e6e656c20616c72656164792065786973747360501b6044820152606401610421565b3360008181526002602081815260409283902080546001600160a01b031916851781553460018201819055429382019390935592519182529192917faf952b0a28349f5ffff2d98aa9050ea845adbe423ff73ac5da5f268834ae3ac091016104aa565b33600090815260026020526040902080546001600160a01b0316610a675760405162461bcd60e51b81526004016104219061133e565b600181015447811115610abc5760405162461bcd60e51b815260206004820152601d60248201527f496e73756666696369656e7420636f6e74726163742062616c616e63650000006044820152606401610421565b604051339082156108fc029083906000818181858888f19350505050158015610ae9573d6000803e3d6000fd5b5060405181815233907f770342ee36990141b5b1f4b3b41a184d7968647ac7f0dbfd2d86d566c468027d9060200160405180910390a25050336000908152600260208190526040822080546001600160a01b0319168155600181018390550155565b6001600160a01b0381811660009081526002602052604090205460609116610b855760405162461bcd60e51b81526004016104219061133e565b600060035467ffffffffffffffff811115610ba257610ba2610f66565b604051908082528060200260200182016040528015610bcb578160200160208202803683370190505b50905060005b600354811015610c3e576001600160a01b0384166000908152600260209081526040808320848452600301909152902054825160ff90911690839083908110610c1c57610c1c611328565b9115156020928302919091019091015280610c368161130f565b915050610bd1565b5092915050565b336000908152600260205260409020546001600160a01b0316610c7a5760405162461bcd60e51b81526004016104219061133e565b6003548110610cc55760405162461bcd60e51b8152602060048201526017602482015276125b9d985b1a59081cdd589cd8dc9a5c1d1a5bdb881251604a1b6044820152606401610421565b600081815260016020818152604080842060028082015433875293529320909101541015610d2c5760405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742062616c616e636560601b6044820152606401610421565b60028082015433600090815260209290925260408220600101805491929091610d56908490611387565b9091555050336000818152600260209081526040808320868452600301825291829020805460ff1916600117905590518481527fea0cbd7c39a8a3c9a996c6ff5ee1f9ebbff1e0cfc5b78bdcef88806d888728e1910160405180910390a25050565b610dc0610e31565b6001600160a01b038116610e255760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610421565b610e2e81610e8b565b50565b6000546001600160a01b031633146109155760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610421565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600060208284031215610eed57600080fd5b5035919050565b6000815180845260005b81811015610f1a57602081850181015186830182015201610efe565b506000602082860101526020601f19601f83011685010191505092915050565b848152608060208201526000610f536080830186610ef4565b6040830194909452506060015292915050565b634e487b7160e01b600052604160045260246000fd5b600080600060608486031215610f9157600080fd5b833567ffffffffffffffff80821115610fa957600080fd5b818601915086601f830112610fbd57600080fd5b813581811115610fcf57610fcf610f66565b604051601f8201601f19908116603f01168101908382118183101715610ff757610ff7610f66565b8160405282815289602084870101111561101057600080fd5b82602086016020830137600060208483010152809750505050505060208401359150604084013590509250925092565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b838110156110bd57603f19898403018552815160808151855288820151818a87015261109582870182610ef4565b838a0151878b0152606093840151939096019290925250509386019390860190600101611067565b509098975050505050505050565b600080602083850312156110de57600080fd5b823567ffffffffffffffff808211156110f657600080fd5b818501915085601f83011261110a57600080fd5b81358181111561111957600080fd5b8660208260051b850101111561112e57600080fd5b60209290920196919550909350505050565b60006020828403121561115257600080fd5b81356001600160a01b038116811461116957600080fd5b9392505050565b6020808252825182820181905260009190848201906040850190845b818110156111aa57835115158352928401929184019160010161118c565b50909695505050505050565b600181811c908216806111ca57607f821691505b6020821081036106f757634e487b7160e01b600052602260045260246000fd5b601f82111561123457600081815260208120601f850160051c810160208610156112115750805b601f850160051c820191505b818110156112305782815560010161121d565b5050505b505050565b815167ffffffffffffffff81111561125357611253610f66565b6112678161126184546111b6565b846111ea565b602080601f83116001811461129c57600084156112845750858301515b600019600386901b1c1916600185901b178555611230565b600085815260208120601f198616915b828110156112cb578886015182559484019460019091019084016112ac565b50858210156112e95787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b600060018201611321576113216112f9565b5060010190565b634e487b7160e01b600052603260045260246000fd5b60208082526016908201527510da185b9b995b08191bd95cc81b9bdd08195e1a5cdd60521b604082015260600190565b80820180821115611381576113816112f9565b92915050565b81810381811115611381576113816112f956fea26469706673582212208d826e7766ca6703099c351ebb74d5bb33292aeaf1c3cc39b61886406ab5cd3364736f6c63430008110033",
  "deployedBytecode": "",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "contracts/SubscriptionManager.sol:SubscriptionManager",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 172,
        "contract": "contracts/SubscriptionManager.sol:SubscriptionManager",
        "label": "subscriptions",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_uint256,t_struct(Subscription)156_storage)"
      },
      {
        "astId": 177,
        "contract": "contracts/SubscriptionManager.sol:SubscriptionManager",
        "label": "channels",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_struct(Channel)167_storage)"
      },
      {
        "astId": 179,
        "contract": "contracts/SubscriptionManager.sol:SubscriptionManager",
        "label": "subscriptionCount",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_struct(Channel)167_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct SubscriptionManager.Channel)",
        "numberOfBytes": "32",
        "value": "t_struct(Channel)167_storage"
      },
      "t_mapping(t_uint256,t_bool)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_uint256,t_struct(Subscription)156_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct SubscriptionManager.Subscription)",
        "numberOfBytes": "32",
        "value": "t_struct(Subscription)156_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Channel)167_storage": {
        "encoding": "inplace",
        "label": "struct SubscriptionManager.Channel",
        "members": [
          {
            "astId": 158,
            "contract": "contracts/SubscriptionManager.sol:SubscriptionManager",
            "label": "user",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 160,
            "contract": "contracts/SubscriptionManager.sol:SubscriptionManager",
            "label": "balance",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 162,
            "contract": "contracts/SubscriptionManager.sol:SubscriptionManager",
            "label": "lastSettled",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 166,
            "contract": "contracts/SubscriptionManager.sol:SubscriptionManager",
            "label": "activeSubscriptions",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_uint256,t_bool)"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_struct(Subscription)156_storage": {
        "encoding": "inplace",
        "label": "struct SubscriptionManager.Subscription",
        "members": [
          {
            "astId": 149,
            "contract": "contracts/SubscriptionManager.sol:SubscriptionManager",
            "label": "id",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 151,
            "contract": "contracts/SubscriptionManager.sol:SubscriptionManager",
            "label": "name",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 153,
            "contract": "contracts/SubscriptionManager.sol:SubscriptionManager",
            "label": "price",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 155,
            "contract": "contracts/SubscriptionManager.sol:SubscriptionManager",
            "label": "duration",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}